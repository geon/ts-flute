var v=Object.defineProperty;var O=(a,n,c)=>n in a?v(a,n,{enumerable:!0,configurable:!0,writable:!0,value:c}):a[n]=c;var r=(a,n,c)=>O(a,typeof n!="symbol"?n+"":n,c);(function(){"use strict";function a(t,e){class s extends AudioWorkletProcessor{constructor({processorOptions:l}){super();r(this,"toneOscilator");r(this,"midiMessages",[]);this.toneOscilator=e(l.sampleRate),this.toneOscilator.next(),this.port.onmessage=o=>{this.midiMessages.push(o.data)}}process(l,o,p){var m;const u=(m=o[0])==null?void 0:m[0];if(!u)throw new Error("Missing channel.");for(let i=0;i<u.length;i++)u[i]=this.toneOscilator.next(this.midiMessages.shift()).value;return!0}}registerProcessor(t,s)}const n="custom-synth-processor";function c(t){return 440*Math.pow(2,(t-69)/12)}class f{constructor(e){r(this,"cursor");r(this,"samples");if(!e)throw new Error("A delay line must have a size.");this.cursor=0,this.samples=[];for(let s=0;s<e;++s)this.samples[s]=0}read(){return this.samples[this.cursor]}write(e){this.samples[this.cursor]=e}step(){this.cursor=(this.cursor+1)%this.samples.length}}class g{constructor(e){r(this,"delayLines");this.delayLines=[new f(e),new f(e)]}read(){return[this.delayLines[0].read(),this.delayLines[1].read()]}write(e){this.delayLines[0].write(e[0]),this.delayLines[1].write(e[1])}step(){this.delayLines[0].step(),this.delayLines[1].step()}}class w{constructor(e,s){r(this,"samplesLeftToTarget");r(this,"current");r(this,"target");this.samplerate=e,this.samplesLeftToTarget=0,this.current=s,this.target=s}setTarget(e,s){this.target=e,this.samplesLeftToTarget=this.samplerate*s}step(){return this.samplesLeftToTarget&&(this.current+=(this.target-this.current)/this.samplesLeftToTarget,--this.samplesLeftToTarget),this.current}}function y(t,e){return Math.max(-e,Math.min(e,t))}class T{constructor(){r(this,"value",0);r(this,"delta",0)}step(e,s){const l=.01*(-1+2*Math.random()),o=this.value*.99+this.delta*.03,p=this.delta-(this.value+s)*.03;return this.value=y(o+l,e),this.delta=p,this.value}}function*L(t){const s=t/343,d=.75;let h=new g(1);const l=new T,o=new w(t*.2,0);for(;;){const[p,u]=h.read(),m=l.step(o.step(),u);h.write([m+u*d,p*-d]),h.step();const i=yield p;if(i)switch(i.type){case"noteon":{const M=343/c(i.number);h=new g(M*s),o.setTarget(1,.3);break}case"noteoff":{o.setTarget(0,.1);break}}}}a(n,L)})();
